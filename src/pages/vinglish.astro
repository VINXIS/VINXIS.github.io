---
import Default from "../layouts/Default.astro";

const knobs = [
    { label: "Swap Strength", value: 0.05 },
    { label: "Noise Strength", value: 0.13 },
    { label: "Insertion Strength", value: 0.08 },
];

const meta = {
    title: "Vinglish",
    ogTitle: "Vinglish",
    description: "Vinglish is a tool that converts English text to Vinglish.",
    ogDescription: "Vinglish is a tool that converts English text to Vinglish.",
    ogType: "website",
    ogUrl: "https://vinxis.moe/vinglish",
    ogSiteName: "VINXIS",
    ogLocale: "en_US",
    ogImage: "https://vinxis.moe/metaImage.png",
    twitterCard: "summary_large_image",
    twitterTitle: "Vinglish",
    twitterDescription: "Vinglish is a tool that converts English text to Vinglish.",
    twitterImage: "https://vinxis.moe/metaImage.png",
};
---

<Default meta={meta}>
    <div class="page">
        <h1 class="title">
            Vinglish Translator
        </h1>
        <div class="vinglish-page">
            <div class="knobs">
                {knobs.map(knob => (
                    <div class="knob">
                        <input
                            type="range"
                            min="0"
                            max="0.99"
                            step="0.01"
                        />
                        <label>{knob.label}: {knob.value}</label>
                    </div>
                ))}
            </div>
            <div class="text-boxes">
                <textarea
                    id="input"
                    placeholder="Enter input text"
                />
                <textarea
                    readonly
                    id="output"
                    placeholder="Output will appear here"
                />
            </div>
            <div class="button" id="generate">
                Generate
            </div>
        </div>
    </div>
</Default>

<script>
    document.addEventListener("astro:page-load", () => {
        let inputText = "";
        document.getElementById("input")!.addEventListener("input", e => {
            inputText = (e.target as HTMLTextAreaElement).value;
            generate();
        });

        const knobs = [
            { label: "Swap Strength", value: 0.05 },
            { label: "Noise Strength", value: 0.13 },
            { label: "Insertion Strength", value: 0.08 },
        ];

        const chars = "`1234567890)(*&^%$#@!~qwertyuiop[]`\\';lkjhgfdsazxcvbnm,./";

        function generate () {
            const arr = inputText.split("");
            for (let i = 0; i < arr.length - 1; i++) {
                if (knobs[0]!.value > Math.random()) {
                    const swapVal = arr[i]!;
                    arr[i] = arr[i + 1]!;
                    arr[i + 1] = swapVal;
                }

                if (knobs[1]!.value > Math.random())
                    if (knobs[2]!.value > Math.random())
                        arr.splice(i, 0, chars[chars.indexOf(arr[i]!) + Math.floor(Math.random() * 2)]!);
                    else
                        arr.splice(i, 1);
            }
            (document.getElementById("output") as HTMLTextAreaElement).value = arr.join("");
        }

        document.querySelectorAll("div.knob input[type='range']").forEach((knob, index) => {
            (knob as HTMLInputElement).value = knobs[index]!.value.toString();
            knob.addEventListener("input", e => {
                knobs[index]!.value = parseFloat((e.target as HTMLInputElement).value);
                (e.target as HTMLInputElement).nextElementSibling!.textContent = `${knobs[index]!.label}: ${knobs[index]!.value}`;
                generate();
            });
        });
        document.getElementById("generate")!.addEventListener("click", generate);
    });
</script>

<style>
.vinglish-page {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    height: calc(100vh - 20rem);
}

.text-boxes {
    display: flex;
    gap: 1rem;
    width: 100%;
    height: 100%;
    flex: 1;
}

.text-boxes textarea {
    flex: 1;
    padding: 1rem;
    font-family: "Inconsolata", sans-serif;
    font-size: 1rem;
    background-color: var(--neutral);
    color: #ffffff;
    border: none;
    border-radius: 5px;
}

.text-boxes textarea::placeholder {
    color: white;
}

.text-boxes textarea:focus {
    outline: none;
    border: none;
}

.knobs {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    width: 25%;
}

.knob input[type="range"] {
    width: 100%;
    background-color: transparent;
    appearance: none;
    -webkit-appearance: none;
    border-radius: 5px;
}

.knob input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    width: 20px;
    height: 20px;
    background-color: white;
    border: none;
    cursor: pointer;
}

.knob input[type="range"]::-webkit-slider-runnable-track {
    width: 100%;
    height: 20px;
    background-color: var(--neutral);
    border: none;
    border-radius: 5px;
}

.knob input[type="range"]::-moz-range-thumb {
    width: 20px;
    height: 20px;
    background-color: white;
    border: none;
    border-radius: 50%;
    cursor: pointer;
}

.knob input[type="range"]::-moz-range-track {
    width: 100%;
    height: 4px;
    background-color: var(--neutral);
    border: none;
    border-radius: 5px;
}

.knob input[type="range"]::-ms-thumb {
    width: 20px;
    height: 20px;
    background-color: white;
    border: none;
    border-radius: 50%;
    cursor: pointer;
}

.knob input[type="range"]::-ms-track {
    width: 100%;
    height: 4px;
    background-color: var(--neutral);
    border: none;
    border-radius: 5px;
}

.knob label {
    color: white;
}

.button {
    padding: 1rem 2rem;
    font-size: 1rem;
    background-color: var(--dark-neutral);
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    height: min-content;
}

.button:hover {
    background-color: var(--secondary);
}
</style>