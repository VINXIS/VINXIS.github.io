<div id="flashlight-toggle" class="flashlight-toggle" transition:persist/>
<div id="flashlight" class="flashlight" transition:persist/>
<script>
    import onImg from "../images/light/on.svg";
    import offImg from "../images/light/off.svg";

    const flashlight = document.getElementById("flashlight")!;
    const flashlightToggle = document.getElementById("flashlight-toggle")!;  

    const radius = 200;
    let gray = 0;
    let disabled = false;
    let mouseX = 0;
    let mouseY = 0;

    flashlight.style.width = `${radius}px`;
    flashlight.style.height = `${radius}px`;

    // Update the mouse position
    // If touchscreen, use touch events, otherwise use mouse events
    if ("ontouchstart" in window) {
        document.addEventListener("touchstart", (event) => {
            mouseX = event.touches[0]!.clientX;
            mouseY = event.touches[0]!.clientY;
            if (disabled)
                return;
            gray = 255;
        });
        document.addEventListener("touchmove", (event) => {
            mouseX = event.touches[0]!.clientX;
            mouseY = event.touches[0]!.clientY;
        });
        document.addEventListener("touchend", (event) => {
            mouseX = event.touches[0]!.clientX;
            mouseY = event.touches[0]!.clientY;
            if (disabled)
                return;
            gray = 0;
        });
    } else {
        document.addEventListener("mousemove", (event) => {
            mouseX = event.clientX;
            mouseY = event.clientY;
        });
        document.addEventListener("click", (event) => {
            mouseX = event.clientX;
            mouseY = event.clientY;
            if (disabled)
                return;
            gray = gray === 0 ? 255 : 0;
        });
    }

    // Update the flashlight position
    function updateFlashlight () {
        flashlight.style.left = `${mouseX - radius / 2}px`;
        flashlight.style.top = `${mouseY - radius / 2}px`;
        flashlight.style.background = `radial-gradient(rgba(${gray}, ${gray}, ${gray}, ${gray / 255}) 0%, rgba(0, 0, 0, 0) 50%)`;
        requestAnimationFrame(updateFlashlight);
    }
    updateFlashlight();

    // Update the flashlight toggle
    flashlightToggle.style.background = `url(${disabled ? offImg.src : onImg.src})`;
    flashlightToggle.addEventListener("click", () => {
        disabled = !disabled;
        gray = 0;
        mouseX = disabled ? 0 : mouseX;
        mouseY = disabled ? 0 : mouseY;
        flashlightToggle.style.background = `url(${disabled ? offImg.src : onImg.src})`;
    });
</script>
<noscript>
    <style>
        .flashlight, .flashlight-toggle {
            display: none;
        }
    </style>
</noscript>
<style>
    .flashlight {
        position: fixed;
        border-radius: 50%;
        mix-blend-mode: difference;
        transition: none;
        pointer-events: none;
    }

    .flashlight-toggle {
        --toggle-size: 60px;

        position: fixed;
        top: 0;
        right: 0;
        width: var(--toggle-size);
        height: var(--toggle-size);
        background-size: cover;
        cursor: pointer;
    }
</style>